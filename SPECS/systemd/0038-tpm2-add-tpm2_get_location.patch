From f3656f76de2cb123ef73b28efd46d883b6a88882 Mon Sep 17 00:00:00 2001
From: Dan Streetman <ddstreet@ieee.org>
Date: Fri, 7 Jul 2023 11:25:12 -0400
Subject: [PATCH 38/44] tpm2: add tpm2_get_location()

Add function to get TPM2_HANDLE location of a Tpm2Handle.

Versions of libtss2-esys older than 2.4.0 did not include this function, so
tpm2_get_location() will fail with EOPNOTSUPP when using older libtss2-esys
versions.
---
 src/shared/tpm2-util.c | 29 +++++++++++++++++++++++++++++
 src/shared/tpm2-util.h |  2 ++
 2 files changed, 31 insertions(+)

diff --git a/src/shared/tpm2-util.c b/src/shared/tpm2-util.c
index 4fe920cf5f..d4a3bd555f 100644
--- a/src/shared/tpm2-util.c
+++ b/src/shared/tpm2-util.c
@@ -61,6 +61,7 @@ static TSS2_RC (*sym_Esys_TR_Close)(ESYS_CONTEXT *esys_context, ESYS_TR *rsrc_ha
 static TSS2_RC (*sym_Esys_TR_Deserialize)(ESYS_CONTEXT *esys_context, uint8_t const *buffer, size_t buffer_size, ESYS_TR *esys_handle) = NULL;
 static TSS2_RC (*sym_Esys_TR_FromTPMPublic)(ESYS_CONTEXT *esysContext, TPM2_HANDLE tpm_handle, ESYS_TR optionalSession1, ESYS_TR optionalSession2, ESYS_TR optionalSession3, ESYS_TR *object) = NULL;
 static TSS2_RC (*sym_Esys_TR_GetName)(ESYS_CONTEXT *esysContext, ESYS_TR handle, TPM2B_NAME **name) = NULL;
+static TSS2_RC (*sym_Esys_TR_GetTpmHandle)(ESYS_CONTEXT *esys_context, ESYS_TR esys_handle, TPM2_HANDLE *tpm_handle) = NULL;
 static TSS2_RC (*sym_Esys_TR_Serialize)(ESYS_CONTEXT *esys_context, ESYS_TR object, uint8_t **buffer, size_t *buffer_size) = NULL;
 static TSS2_RC (*sym_Esys_TR_SetAuth)(ESYS_CONTEXT *esysContext, ESYS_TR handle, TPM2B_AUTH const *authValue) = NULL;
 static TSS2_RC (*sym_Esys_TRSess_GetAttributes)(ESYS_CONTEXT *esysContext, ESYS_TR session, TPMA_SESSION *flags) = NULL;
@@ -128,6 +129,12 @@ int dlopen_tpm2(void) {
         if (r < 0)
                 return r;
 
+        /* Esys_TR_GetTpmHandle was added to tpm2-tss in version 2.4.0. Once we can set a minimum tpm2-tss
+         * version of 2.4.0 this sym can be moved up to the normal list above. */
+        r = dlsym_many_or_warn(libtss2_esys_dl, LOG_DEBUG, DLSYM_ARG_FORCE(Esys_TR_GetTpmHandle));
+        if (r < 0)
+                log_debug("libtss2-esys too old, does not include Esys_TR_GetTpmHandle.");
+
         r = dlopen_many_sym_or_warn(
                         &libtss2_rc_dl, "libtss2-rc.so.0", LOG_DEBUG,
                         DLSYM_ARG(Tss2_RC_Decode));
@@ -1117,6 +1124,28 @@ int tpm2_get_best_srk_template(Tpm2Context *c, TPMT_PUBLIC *ret_template) {
                                "TPM does not support either SRK template L-1 (RSA) or L-2 (ECC).");
 }
 
+/* Get the TPM2_HANDLE location for the provided Tpm2Handle. */
+int tpm2_get_location(Tpm2Context *c, const Tpm2Handle *handle, TPM2_HANDLE *ret_location) {
+        TSS2_RC rc;
+
+        assert(c);
+        assert(handle);
+        assert(ret_location);
+
+        /* Esys_TR_GetTpmHandle was added to tpm2-tss in version 2.4.0. Once we can set a minimum tpm2-tss
+         * version of 2.4.0 this check can be removed. */
+        if (!sym_Esys_TR_GetTpmHandle)
+                return log_error_errno(SYNTHETIC_ERRNO(EOPNOTSUPP),
+                                       "libtss2-esys too old, does not include Esys_TR_GetTpmHandle.");
+
+        rc = sym_Esys_TR_GetTpmHandle(c->esys_context, handle->esys_handle, ret_location);
+        if (rc != TSS2_RC_SUCCESS)
+                return log_error_errno(SYNTHETIC_ERRNO(ENOTRECOVERABLE),
+                                       "Failed to get handle location: %s", sym_Tss2_RC_Decode(rc));
+
+        return 0;
+}
+
 /* Get the Tpm2Handle at the requested location. Returns 1 if found, 0 if the location is empty, or < 0 on
  * error. Also see tpm2_get_srk() below; the SRK is a commonly used persistent Tpm2Handle. */
 int tpm2_get_handle(
diff --git a/src/shared/tpm2-util.h b/src/shared/tpm2-util.h
index 908e1982b9..22557db061 100644
--- a/src/shared/tpm2-util.h
+++ b/src/shared/tpm2-util.h
@@ -160,6 +160,8 @@ void tpm2_log_debug_buffer(const void *buffer, size_t size, const char *msg);
 void tpm2_log_debug_digest(const TPM2B_DIGEST *digest, const char *msg);
 void tpm2_log_debug_name(const TPM2B_NAME *name, const char *msg);
 
+int tpm2_get_location(Tpm2Context *c, const Tpm2Handle *handle, TPM2_HANDLE *ret_location);
+
 int tpm2_get_handle(Tpm2Context *c, TPM2_HANDLE location, const Tpm2Handle *session, TPM2B_PUBLIC **ret_public, TPM2B_NAME **ret_name, TPM2B_NAME **ret_qname, Tpm2Handle **ret_handle);
 
 int tpm2_get_srk_template(Tpm2Context *c, TPMI_ALG_PUBLIC alg, TPMT_PUBLIC *ret_template);
-- 
2.34.1

